
<style>
    .nested, .CategoryTreeView {
        list-style-type: none !important;
    }

    .CategoryTreeView {
        margin: 0;
        padding: 0;
    }

    .caret {
        cursor: pointer;
        -webkit-user-select: none; /* Safari 3.1+ */
        -moz-user-select: none; /* Firefox 2+ */
        -ms-user-select: none; /* IE 10+ */
        user-select: none;
    }

        .caret::before {
            content: "\25B6";
            color: black;
            display: inline-block;
            margin-right: 6px;
        }

    .caret-down::before {
        -ms-transform: rotate(90deg); /* IE 9 */
        -webkit-transform: rotate(90deg); /* Safari */
        transform: rotate(90deg);
    }

    .nested {
        display: none;
    }

    .active {
        display: block;
    }
</style>

@model CategoryListViewModel
@{
    object LoadSubMenu(Category category, ICollection<Category> categories)
    {
        ICollection<Product> localProducts = Model.AllProduct.Where(x => x.Categoryid == category.id).ToList();
        if (categories?.Count > 0)
        {
            <ul class="nested">
                @foreach (Category subCategory in categories)
                {
                    <li>

                        @{
                            ICollection<Category> subcategories = Model.GetCategoryies(subCategory.id);
                            if (subcategories.Count > 0)
                            {
                                <span class="caret">@Model.NameId(subCategory)</span>
                                @LoadSubMenu(subCategory, subcategories)
                                @LoadProducts(subCategory,localProducts)
                            }
                            else
                            {
                                if (localProducts.Count > 0)
                                {
                                    <span class="caret">@Model.NameId(subCategory)</span>
                                    @LoadProducts(subCategory, localProducts)
                                }
                                else
                                {
                                    @Model.NameId(subCategory)
                                }
                            }
                        }
                    </li>

                }

            </ul>

        }
        else if (category.Parentid != 0)
        {
            if (localProducts.Count > 0)
            {
                <li>
                    <span class="caret">X @Model.NameId(category)</span>
                    @LoadProducts(category, localProducts)
                </li>
            }
            else
            {
                <li>@Model.NameId(category)</li>
            }
        }

        return null;
    }


    object LoadProducts(Category category, ICollection<Product> localProducts)
    {

        <ul class="nested">
            @foreach (Product product in localProducts)
            {
                <li>
                    @product.SupTitle
                </li>

            }

        </ul>


        return null;
    }



}
@{
    <ul class="CategoryTreeView">
        @foreach (Category MainCategory in Model.MainCategories)
        {
            ICollection<Category> subcategories = Model.GetCategoryies(MainCategory.id);
            ICollection<Product> localProducts = Model.AllProduct.Where(x => x.Categoryid == MainCategory.id).ToList();

            if (subcategories.Count > 0)
            {
                <li>
                    <span class="caret">@Model.NameId(MainCategory)</span>
                    @LoadSubMenu(MainCategory, subcategories)
                    @LoadProducts(MainCategory,localProducts)
                </li>
            }
            else if (MainCategory.Name != "ROOT")
            {
                if (localProducts.Count > 0)
                {
                    <li>
                        <span class="caret">@Model.NameId(MainCategory)</span>
                        @LoadProducts(MainCategory, localProducts)
                    </li>
                }
                else
                {
                    <li>@Model.NameId(MainCategory)</li>
                }

            }
            else
            {
                @foreach (Product product in localProducts)
                {
                    <li>
                        @product.SupTitle
                    </li>
                }
            }

        }
    </ul>

}





<script>

    var toggler = document.getElementsByClassName("caret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
        });
    }
</script>


